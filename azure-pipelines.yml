# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
- repo: self
  clean: true

pool:
  name: Azure Pipelines
  vmImage: windows-2019
  demands: npm

variables:
  BuildConfiguration: 'Release'

stages:
- stage: build
  jobs:
    - job: build  
      steps:
      - task: Npm@1
        displayName: 'NPM Install'
        inputs:
          workingDir: 'ChamadoFacil\ChamadoFacil.UserInterface'
          verbose: true

      - task: Npm@1
        displayName: 'NPM Install Angular CLI'
        inputs:
          command: custom
          workingDir: 'ChamadoFacil\ChamadoFacil.UserInterface'
          verbose: false
          customCommand: 'install -g @angular/cli'

      - task: Npm@1
        displayName: 'NPM Run Script Build'
        inputs:
          command: custom
          workingDir: 'ChamadoFacil\ChamadoFacil.UserInterface'
          verbose: false
          customCommand: 'run-script build'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet restore'
        inputs:
          command: 'restore'
          projects: 'ChamadoFacil\ChamadoFacil.ApplicationService\ChamadoFacil.ApplicationService.csproj'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          command: 'build'
          projects: 'ChamadoFacil/ChamadoFacil.ApplicationService/ChamadoFacil.ApplicationService.csproj'
          
      - task: DotNetCoreCLI@2
        displayName: 'publish artifacts'
        inputs:
          command: 'publish'
          projects: 'ChamadoFacil/ChamadoFacil.ApplicationService/ChamadoFacil.ApplicationService.csproj'
          arguments: '-o $(build.artifactStagingDirectory)'
      
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(build.artifactStagingDirectory)
          artifact: 'drop'
          publishLocation: 'pipeline'    

- stage: test
  jobs:
    - job: test
      steps:
      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          projects: '**/*[Tt]est*/*.csproj'
          publishTestResults: true
          arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
